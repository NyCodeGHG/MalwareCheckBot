plugins {
    kotlin("jvm") version "1.5.10"
    kotlin("plugin.serialization") version "1.5.10"
    id("org.jlleitschuh.gradle.ktlint") version "10.1.0"
    application
}

group = "de.nycode"
version = "1.0-SNAPSHOT"

repositories {
    mavenCentral()
    maven("https://oss.sonatype.org/content/repositories/snapshots")
    maven("https://schlaubi.jfrog.io/artifactory/envconf/") {
        content {
            includeModuleByRegex("dev.schlaubi", "envconf(?:-jvm)?")
        }
    }
}

dependencies {
    implementation("dev.kord", "kord-core", "0.7.x-SNAPSHOT")
    implementation("io.insert-koin", "koin-core", "3.1.0")

    // Logging
    implementation("io.github.microutils", "kotlin-logging", "2.0.8")
    implementation("ch.qos.logback", "logback-classic", "1.3.0-alpha5")
    implementation("io.sentry", "sentry", "5.0.1")
    implementation("io.sentry", "sentry-logback", "5.0.1")

    // Configuration
    implementation("dev.schlaubi", "envconf", "1.1")

    // MongoDB
    implementation("org.litote.kmongo", "kmongo-coroutine-core", "4.2.7")
    implementation("org.litote.kmongo", "kmongo-serialization-mapping", "4.2.7")

    implementation(platform("io.ktor:ktor-bom:1.6.0"))
    implementation("io.ktor", "ktor-client-core")
    implementation("io.ktor", "ktor-client-serialization")
    implementation("io.ktor", "ktor-client-okhttp")

    implementation("org.jetbrains.kotlinx", "kotlinx-serialization-json", "1.2.1")

    // Redis
    implementation("io.lettuce", "lettuce-core", "6.1.2.RELEASE")

    // Coroutines
    implementation("org.jetbrains.kotlinx", "kotlinx-coroutines-core", "1.5.0")
    implementation("org.jetbrains.kotlinx", "kotlinx-coroutines-reactor", "1.5.0")
}

tasks {
    withType<org.jetbrains.kotlin.gradle.tasks.KotlinCompile> {
        kotlinOptions {
            jvmTarget = "16"
            freeCompilerArgs =
                listOf(
                    "dev.kord.common.annotation.KordPreview",
                    "kotlin.RequiresOptIn",
                    "kotlin.ExperimentalStdlibApi",
                    "kotlin.time.ExperimentalTime",
                    "io.lettuce.core.ExperimentalLettuceCoroutinesApi"
                ).map { "-Xopt-in=$it" }
        }
    }
}
