package de.nycode.malwarecheckbot.command

import de.nycode.malwarecheckbot.config.Config
import de.nycode.malwarecheckbot.config.Environment
import dev.kord.core.Kord
import dev.kord.core.entity.interaction.ApplicationCommand
import dev.kord.core.entity.interaction.CommandInteraction
import dev.kord.core.event.interaction.InteractionCreateEvent
import dev.kord.rest.builder.interaction.ApplicationCommandCreateBuilder
import io.sentry.Sentry
import kotlinx.coroutines.channels.Channel
import kotlinx.coroutines.flow.*

/**
 * Abstraction for slash commands.
 *
 * @property name the name of the slash command
 * @property description the description of the slash command
 */
abstract class AbstractSlashCommand {
    abstract val name: String
    abstract val description: String

    lateinit var kord: Kord
        private set

    /**
     * Registers the slash command to the project.
     *
     * @throws IllegalStateException if it already got registeres
     */
    open suspend fun register(kord: Kord) {
        require(!this::kord.isInitialized) { "Command is already registered" }
        registerCommand(kord)
        registerListener(kord)
    }

    private fun registerListener(kord: Kord) {
        kord
            .events
            .buffer(Channel.UNLIMITED)
            .filterIsInstance<InteractionCreateEvent>()
            .filter { (it.interaction as? CommandInteraction)?.command?.rootName == name }
            .onEach {
                try {
                    it.onInvocation()
                } catch (exception: Exception) {
                    Sentry.captureException(exception)
                }
            }.launchIn(kord)
    }

    /**
     * This gets invoked on any [InteractionCreateEvent] that matches [name].
     */
    protected abstract suspend fun InteractionCreateEvent.onInvocation()

    // Global commands have a 2 hour update time so for testing you may want to use guild commands
    // as they update instantly
    // You can only create guild commands or use global commands if the bot is added with the application.commands scope
    // In addition to the bot scope
    // Global commands work on any DM Channel and on any guild the bot has the scope on
    private suspend fun registerCommand(kord: Kord): ApplicationCommand {
        return when (Config.ENVIRONMENT) {
            Environment.PRODUCTION -> {
                kord.slashCommands.createGlobalApplicationCommand(name, description) { commandOptions() }
            }
            Environment.DEVELOPMENT -> {
                val testGuildId = Config.TEST_GUILD
                kord.slashCommands.createGuildApplicationCommand(testGuildId, name, description) { commandOptions() }
            }
        }
    }

    /**
     * This can be overridden to apply on options to the command.
     */
    open suspend fun ApplicationCommandCreateBuilder.commandOptions() = Unit
}
