package de.nycode.malwarecheckbot.filtering.caching

import de.nycode.malwarecheckbot.filtering.safebrowsing.*
import de.nycode.malwarecheckbot.serialization.MetadataEntryMapSerializer
import kotlinx.serialization.Serializable

@Serializable
data class ThreatCacheValue(
    val key: String,
    val types: List<ThreatType>,
    val platforms: List<PlatformType>,
    val entryTypes: List<ThreatEntryType>,
    val threats: List<ThreatEntry>,
    @Serializable(with = MetadataEntryMapSerializer::class)
    val threatEntryMetadata: Map<String, String> = emptyMap(),
)

fun List<ThreatMatch>.toCacheValue(url: String): ThreatCacheValue {
    val threats = map { it.threat }
    val types = map { it.threatType }
    val platforms = map { it.platformType }
    val entryTypes = map { it.threatEntryType }
    return ThreatCacheValue(url, types, platforms, entryTypes, threats)
}
