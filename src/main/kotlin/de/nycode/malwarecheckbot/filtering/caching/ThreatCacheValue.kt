package de.nycode.malwarecheckbot.filtering.caching

import de.nycode.malwarecheckbot.filtering.safebrowsing.PlatformType
import de.nycode.malwarecheckbot.filtering.safebrowsing.ThreatEntryType
import de.nycode.malwarecheckbot.filtering.safebrowsing.ThreatMatch
import de.nycode.malwarecheckbot.filtering.safebrowsing.ThreatType
import kotlinx.serialization.Serializable

@Serializable
data class ThreatCacheValue(
    val key: String,
    val types: Set<ThreatType>,
    val platforms: Set<PlatformType>,
    val entryTypes: Set<ThreatEntryType>,
    val fromCache: Boolean
)

fun List<ThreatMatch>.toCacheValue(url: String, fromCache: Boolean = false): ThreatCacheValue {
    val types = mutableSetOf<ThreatType>()
    val platforms = mutableSetOf<PlatformType>()
    val entryTypes = mutableSetOf<ThreatEntryType>()
    forEach {
        types.add(it.threatType)
        platforms.add(it.platformType)
        entryTypes.add(it.threatEntryType)
    }
    return ThreatCacheValue(url, types, platforms, entryTypes, fromCache = fromCache)
}
