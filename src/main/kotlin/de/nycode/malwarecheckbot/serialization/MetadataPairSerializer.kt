package de.nycode.malwarecheckbot.serialization

import kotlinx.serialization.KSerializer
import kotlinx.serialization.descriptors.buildClassSerialDescriptor
import kotlinx.serialization.descriptors.element
import kotlinx.serialization.encoding.Decoder
import kotlinx.serialization.encoding.Encoder
import kotlinx.serialization.encoding.decodeStructure
import kotlinx.serialization.encoding.encodeStructure

object MetadataPairSerializer : KSerializer<Pair<String, String>> {
    override val descriptor = buildClassSerialDescriptor("Pair") {
        element<String>("key")
        element<String>("value")
    }

    override fun deserialize(decoder: Decoder): Pair<String, String> {
        return decoder.decodeStructure(descriptor) {
            decodeStringElement(descriptor, 0) to decodeStringElement(descriptor, 1)
        }
    }

    override fun serialize(encoder: Encoder, value: Pair<String, String>) {
        encoder.encodeStructure(descriptor) {
            encodeStringElement(descriptor, 0, value.first)
            encodeStringElement(descriptor, 1, value.second)
        }
    }
}
