package de.nycode.malwarecheckbot.serialization

import dev.kord.common.entity.Snowflake
import kotlinx.serialization.KSerializer
import kotlinx.serialization.descriptors.PrimitiveKind
import kotlinx.serialization.descriptors.PrimitiveSerialDescriptor
import kotlinx.serialization.encoding.Decoder
import kotlinx.serialization.encoding.Encoder

/**
 * Temporary Solution as an alternative to the build in [Snowflake] Serializer until [#313](https://github.com/kordlib/kord/issues/313) gets fixed.
 */
object SnowflakeSerializer : KSerializer<Snowflake> {
    override val descriptor = PrimitiveSerialDescriptor("Snowflake", PrimitiveKind.STRING)
    override fun deserialize(decoder: Decoder): Snowflake {
        return Snowflake(decoder.decodeString())
    }

    override fun serialize(encoder: Encoder, value: Snowflake) {
        encoder.encodeString(value.asString)
    }
}
